//------------------------------------------------
//--- 010 Editor v12.0.1 Binary Template
//
//      File: CCS.bt
//   Authors: HydraBladeZ
//   Version: 1.00
//   Purpose: Parse CCS files
//  Category: 
// File Mask: *.ccs
//  ID Bytes: 46 53 43 43
//   History: 
//------------------------------------------------

LittleEndian();

//Animation Chunk
typedef struct
{   
    SetBackColor( AnimationSectionColor );
    u32 ChunkNameIndex <read=ReadChunkNameIndex>;
    s32 FrameCount;
    u32 FramesSectionSize; //Multiplied by 4
    
    local int CurrentFrame = 0;
    local int StartPos = FTell();
    local int EndPos = StartPos + (FramesSectionSize * 4);
    local int i;
    
    while (FTell() < EndPos)
    {
        struct
        {
            AnimationTypes Type;
            FSkip(2);
            u32 Size;
            
            switch (Type)
            {
                case AmbientFrame:
                    struct ColorRGBA Color;
                break;

                case ObjectFrame:
                    //Printf("object controller at %x \n", FTell());
                    struct ObjFrame ObjectFrame;
                break;

                case ObjectController:
                    struct ObjCtrl ObjectController;
                break;

                case Frame:
                    int currentKeyFrame;
                    CurrentFrame = currentKeyFrame;
                break;

                case MorpherFrame:
                    struct MorphFrame MorpherFrame;
                break;
                case MorpherController:
                    struct MorphCtrl MorpherController;
                break;

                case NoteFrame:
                    struct NoteF Note;
                break;
                
                case NoteFrame:
                    struct NoteF Note;
                break;

                case CameraFrame:
                    struct CamFrame CameraFrame;
                break;
                
                case DistantLightFrame:
                    struct DistantLFrame Distant;
                break;
                
                case DistantLightController:
                    struct DistantLCtrl DistantLController;
                break;

                case ShadowFrame:
                    struct SdwFrame ShadowFrame;
                break;

                case OutlineFrame:
                    struct OLPFrame OutlineFrame;
                break;
                
                case CelShadeFrame:
                    struct CSPFrame CelShadeFrame;
                break;

                case FBSBlurFrame:
                    struct FBSBFrame FBSBlurFrame;
                break;

                case CameraController:
                    struct CamCtrl CamController;
                break;

                case MaterialFrame:
                    struct MatFrame MaterialFrame;
                break;
                
                case MaterialController:
                    struct MatCtrl MaterialController;
                break;
                
                default:
                    Printf("Unknown Animation (%x) at %x\n", Type, FTell());
                    struct
                        {
                            //u8 Data [Size * 4];
                            u8 Data [EndPos - FTell()];
                        }SUnknown;
                break;
            }
        }AnimationChunk <read = ReadAnmChunkType(Type)>;
    }
        
}ANM;
